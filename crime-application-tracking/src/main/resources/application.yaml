server:
  port: 8490

management:
  server:
    port: 8500
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

springdoc:
  api-docs:
    path: /api-docs

resilience4j:
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 2s
        retry-exceptions:
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - org.springframework.web.reactive.function.client.WebClientResponseException.BadGateway
          - org.springframework.web.reactive.function.client.WebClientResponseException.ServiceUnavailable
          - org.springframework.web.reactive.function.client.WebClientResponseException.InternalServerError
          - org.springframework.web.reactive.function.client.WebClientResponseException.NotImplemented
          - org.springframework.web.reactive.function.client.WebClientResponseException.GatewayTimeout

    instances:
      assessmentAssessorService:
        base-config: default
      eformAuditService:
        base-config: default
      eformResultsService:
        base-config: default
      eformsDecisionHistoryService:
        base-config: default
      eformsHistoryService:
        base-config: default
      eformStagingService:
        base-config: default

spring:
  datasource:
    url: jdbc:postgresql://${DATASOURCE_HOST_PORT}/${DATASOURCE_DBNAME}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      idle-timeout: 60000
      max-lifetime: 3600000

  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.yaml

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    generate-ddl: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate.temp.use_jdbc_metadata_defaults: false

  security:
    oauth2:
      client:
        provider:
          maatapi:
            token-uri: ${MAAT_API_OAUTH_URL}
        registration:
          maatapi:
            client-id: ${MAAT_API_OAUTH_CLIENT_ID}
            client-secret: ${MAAT_API_OAUTH_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            scope:
              - ${MAAT_API_OAUTH_SCOPE}
      resource-server:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI}

  cloud:
    aws:
      credentials:
        use-default-aws-credentials-chain: true
      region:
        static: eu-west-2

services:
  maat-api:
    baseUrl: ${MAAT_API_BASE_URL}
    registrationId: ${MAAT_API_REGISTRATION_ID}

sentry:
  dsn: ${SENTRY_DSN}
  environment: ${SENTRY_ENV}
  release: 0.0.1
  servername: aws-eks-container
  send-default-pii: true
  attach-stacktrace: true
  sample-rate: ${SENTRY_SAMPLE_RATE}

feature:
  email_notifications:
    enabled: ${EMAIL_NOTIFICATIONS_LISTENER_ENABLED}

cloud-platform:
  aws:
    sqs:
      queue:
        email_notifications: ${EMAIL_NOTIFICATIONS_QUEUE}
      listener:
        # Graceful shutdown timeout (in milliseconds)
        shutdown:
          timeout: 60000 # 60 seconds to allow all tasks to finish before shutdown
        polling:
          # Timeout for the polling operation (in milliseconds)
          timeout: 60000 # Long polling timeout for messages
        visibility:
          timeout: 60 # Visibility timeout for messages in seconds

server:
  port: 8490

spring:
  security:
    oauth2:
      client:
        provider:
          maatapi:
            token-uri: ${MAAT_API_OAUTH_URL:http://localhost:9999/oauth2/token}
        registration:
          maatapi:
            client-id: ${MAAT_API_OAUTH_CLIENT_ID:dummy}
            client-secret: ${MAAT_API_OAUTH_CLIENT_SECRET:dummy}
            authorization-grant-type: client_credentials
            scope:
              - ${MAAT_API_OAUTH_SCOPE:maat-cd-api/standard}
      resource-server:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:9999}

  datasource:
    url: jdbc:h2:mem:crime_means_assessment;MODE=PostgreSQL;DB_CLOSE_DELAY=-1
    username: sa
    password: sa
    driver-class-name: org.h2.Driver

  liquibase:
    enabled: true
    change-log: classpath:/db/changelog/db.changelog-master.yaml
    contexts: tests

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: validate
    show-sql: true
    generate-ddl: false

  cloud:
    aws:
      credentials:
        use-default-aws-credentials-chain: true
      region:
        static: us-east-1

services:
  maat-api:
    baseUrl: ${MAAT_API_BASE_URL:http://localhost:9999}
    registrationId: ${MAAT_API_REGISTRATION_ID:maatapi}

crime-application-tracking:
  security:
    issuer-uri: http://localhost:${server.port}

feature:
  email_notifications:
    enabled: false

cloud-platform:
  aws:
    sqs:
      queue:
        email_notifications: test_queue